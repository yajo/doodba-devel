version: "2.4"

services:
  odoo:
    extends:
      file: common.yaml
      service: odoo
    restart: unless-stopped
    env_file:
      - .docker/odoo.env
      - .docker/db-access.env
    environment:
      DB_FILTER: ".*"
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-prod}"
      INITIAL_LANG: ""
      SMTP_SERVER: smtplocal
    depends_on:
      - db
      - smtp
    networks:
      default:
      inverseproxy_shared:
    labels:
      doodba.domain.main: "www.example.com"
      traefik.enable: "true"
      traefik.domain: "www.example.com"
      traefik.forbiddenCrawlers-0.frontend.headers.customResponseHeaders:
        "X-Robots-Tag:noindex, nofollow"
      traefik.forbiddenCrawlers-0.frontend.rule: Host:www.example.com;Path:/web,/web/{anything:.*},/website/info,/website/info/{anything:.*}
      traefik.main-0.frontend.rule: Host:www.example.com
      traefik.longpolling-0.frontend.rule: Host:www.example.com;Path:/longpolling/{anything:.*}
      traefik.longpolling-0.port: 8072
      traefik.alt-1.frontend.redirect.regex: ^(.*)://([^/]+)/(.*)$$
      traefik.alt-1.frontend.redirect.replacement: $$1://www.example.com/$$3
      traefik.alt-1.frontend.rule: Host:example.com
      ? traefik.http.middlewares.doodba-devel-master-15-0-prod-buffering.buffering.retryExpression
      : IsNetworkError() && Attempts() < 5
      traefik.http.middlewares.doodba-devel-master-15-0-prod-compress.compress: "true"
      ? traefik.http.middlewares.doodba-devel-master-15-0-prod-forbid-crawlers.headers.customResponseHeaders.X-Robots-Tag
      : "noindex, nofollow"
      traefik.http.middlewares.doodba-devel-master-15-0-prod-forceSecure.headers.forceSTSHeader: "true"
      traefik.http.middlewares.doodba-devel-master-15-0-prod-forceSecure.headers.sslRedirect: "true"
      traefik.http.services.doodba-devel-master-15-0-prod-main.loadbalancer.server.port: 8069
      traefik.http.services.doodba-devel-master-15-0-prod-longpolling.loadbalancer.server.port: 8072
      traefik.http.routers.doodba-devel-master-15-0-prod-main-0.rule: Host(`www.example.com`)
      traefik.http.routers.doodba-devel-master-15-0-prod-main-0.service: doodba-devel-master-15-0-prod-main
      traefik.http.routers.doodba-devel-master-15-0-prod-main-0.middlewares:
        doodba-devel-master-15-0-prod-buffering, doodba-devel-master-15-0-prod-compress,
        doodba-devel-master-15-0-prod-forceSecure
      traefik.http.routers.doodba-devel-master-15-0-prod-main-secure-0.rule: Host(`www.example.com`)
      traefik.http.routers.doodba-devel-master-15-0-prod-main-secure-0.service: doodba-devel-master-15-0-prod-main
      traefik.http.routers.doodba-devel-master-15-0-prod-main-secure-0.middlewares:
        doodba-devel-master-15-0-prod-buffering, doodba-devel-master-15-0-prod-compress,
        doodba-devel-master-15-0-prod-forceSecure
      traefik.http.routers.doodba-devel-master-15-0-prod-main-secure-0.tls: "true"
      traefik.http.routers.doodba-devel-master-15-0-prod-main-secure-0.tls.certResolver: letsencrypt
      traefik.http.routers.doodba-devel-master-15-0-prod-longpolling-0.rule:
        Host(`www.example.com`) && PathPrefix(`/longpolling/`)
      traefik.http.routers.doodba-devel-master-15-0-prod-longpolling-0.service: doodba-devel-master-15-0-prod-longpolling
      traefik.http.routers.doodba-devel-master-15-0-prod-longpolling-0.middlewares: doodba-devel-master-15-0-prod-forceSecure
      traefik.http.routers.doodba-devel-master-15-0-prod-longpolling-secure-0.rule:
        Host(`www.example.com`) && PathPrefix(`/longpolling/`)
      traefik.http.routers.doodba-devel-master-15-0-prod-longpolling-secure-0.service: doodba-devel-master-15-0-prod-longpolling
      traefik.http.routers.doodba-devel-master-15-0-prod-longpolling-secure-0.middlewares: doodba-devel-master-15-0-prod-forceSecure
      traefik.http.routers.doodba-devel-master-15-0-prod-longpolling-secure-0.tls: "true"
      traefik.http.routers.doodba-devel-master-15-0-prod-longpolling-secure-0.tls.certResolver: letsencrypt
      traefik.http.routers.doodba-devel-master-15-0-prod-forbiddenCrawlers-0.rule:
        Host(`www.example.com`) && (PathPrefix(`/web/`, `/website/info/`) ||
        Path(`/web`, `/website/info`))
      traefik.http.routers.doodba-devel-master-15-0-prod-forbiddenCrawlers-0.service: doodba-devel-master-15-0-prod-main
      ? traefik.http.routers.doodba-devel-master-15-0-prod-forbiddenCrawlers-0.middlewares
      : doodba-devel-master-15-0-prod-buffering, doodba-devel-master-15-0-prod-compress,
        doodba-devel-master-15-0-prod-forbid-crawlers,
        doodba-devel-master-15-0-prod-forceSecure
      ? traefik.http.routers.doodba-devel-master-15-0-prod-forbiddenCrawlers-secure-0.rule
      : Host(`www.example.com`) && (PathPrefix(`/web/`, `/website/info/`) ||
        Path(`/web`, `/website/info`))
      traefik.http.routers.doodba-devel-master-15-0-prod-forbiddenCrawlers-secure-0.service: doodba-devel-master-15-0-prod-main
      ? traefik.http.routers.doodba-devel-master-15-0-prod-forbiddenCrawlers-secure-0.middlewares
      : doodba-devel-master-15-0-prod-buffering, doodba-devel-master-15-0-prod-compress,
        doodba-devel-master-15-0-prod-forbid-crawlers,
        doodba-devel-master-15-0-prod-forceSecure
      traefik.http.routers.doodba-devel-master-15-0-prod-forbiddenCrawlers-secure-0.tls: "true"
      traefik.http.routers.doodba-devel-master-15-0-prod-forbiddenCrawlers-secure-0.tls.certResolver: letsencrypt
      traefik.http.middlewares.doodba-devel-master-15-0-prod-redirect-1.redirectRegex.regex: ^(.*)://([^/]+)/(.*)$$
      traefik.http.middlewares.doodba-devel-master-15-0-prod-redirect-1.redirectRegex.replacement: $$1://www.example.com/$$3
      traefik.http.routers.doodba-devel-master-15-0-prod-redirect-1.rule: Host(`example.com`)
      traefik.http.routers.doodba-devel-master-15-0-prod-redirect-1.service: doodba-devel-master-15-0-prod-main
      traefik.http.routers.doodba-devel-master-15-0-prod-redirect-1.middlewares:
        doodba-devel-master-15-0-prod-compress,
        doodba-devel-master-15-0-prod-forceSecure,
        doodba-devel-master-15-0-prod-redirect-1
      traefik.http.routers.doodba-devel-master-15-0-prod-redirect-secure-1.rule: Host(`example.com`)
      traefik.http.routers.doodba-devel-master-15-0-prod-redirect-secure-1.service: doodba-devel-master-15-0-prod-main
      traefik.http.routers.doodba-devel-master-15-0-prod-redirect-secure-1.middlewares:
        doodba-devel-master-15-0-prod-compress,
        doodba-devel-master-15-0-prod-forceSecure,
        doodba-devel-master-15-0-prod-redirect-1
      traefik.http.routers.doodba-devel-master-15-0-prod-redirect-secure-1.tls: "true"
      traefik.http.routers.doodba-devel-master-15-0-prod-redirect-secure-1.tls.certResolver: letsencrypt

  db:
    extends:
      file: common.yaml
      service: db
    env_file:
      - .docker/db-creation.env
    restart: unless-stopped

  smtp:
    extends:
      file: common.yaml
      service: smtpreal
    env_file:
      - .docker/smtp.env
    networks:
      default:
        aliases:
          - smtplocal
    restart: unless-stopped

  backup:
    extends:
      file: common.yaml
      service: backup
    env_file:
      - .docker/backup.env
      - .docker/db-access.env
    restart: unless-stopped
    depends_on:
      - db
      - smtp

networks:
  default:
    driver_opts:
      encrypted: 1

  inverseproxy_shared:
    external: true

volumes:
  backup_cache:
  filestore:
  db:
  mailconfig:
  maildata:
  maillogs:
  maillogssupervisord:
  mailstate:
